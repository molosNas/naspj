<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://cxf.apache.org/jaxws
http://cxf.apache.org/schemas/jaxws.xsd http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	xmlns:task="http://www.springframework.org/schema/task">
	<import resource="hibernate-cfg.xml" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:mysql.properties</value>
			</list>
		</property>
	</bean>
	<bean id="poolDataSource" abstract="true">
		<property name="maxActive" value="100" />  <!-- 连接池的最大数据库连接数。设为0表示无限制。 -->
		<property name="initialSize" value="10" />  <!-- 初始化连接数量 -->
		<property name="maxWait" value="10000" />  <!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。 -->
		<property name="removeAbandonedTimeout" value="60" />  <!--自我中断时间秒 -->
		<property name="minEvictableIdleTimeMillis" value="30000" />  <!--连接的超时时间，默认为半小时。 -->
		<property name="minIdle" value="10" />  <!-- 最小等待连接中的数量,设 0 为没有限制 -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />  <!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
		<property name="jmxEnabled" value="true" />  <!-- 注册池JMX。的默认值是true。 -->
		<property name="testWhileIdle" value="false" />  <!--默认值是false,当连接池中的空闲连接是否有效 -->
		<property name="testOnBorrow" value="true" /> <!-- 默认值是true，当从连接池取连接时，验证这个连接是否有效 -->
		<property name="validationInterval" value="30000" />  <!--检查连接死活的时间间隔（单位：毫妙） 0以下的话不检查。默认是0。 -->
		<property name="testOnReturn" value="false" />  <!--默认值是flase,当从把该连接放回到连接池的时，验证这个连接是 -->
		<property name="validationQuery" value="select 1" />  <!--一条sql语句，用来验证数据库连接是否正常。这条语句必须是一个查询模式，并至少返回一条数据。可以为任何可以验证数据库连接是否正常的sql -->
		<property name="logAbandoned" value="true" />  <!--是否记录中断事件， 默认为 false -->
		<property name="removeAbandoned" value="true" />  <!-- 是否自动回收超时连接 -->
		<!--这些拦截器将被插入到链中的一个java.sql.Connection对象的操作都是以拦截器。默认值是空的。 预定义的拦截器： org.apache.tomcat.jdbc.pool.interceptor.ConnectionState 
			- 跟踪自动提交，只读目录和事务隔离级别。 org.apache.tomcat.jdbc.pool.interceptor.tatementFinalizer 
			- 跟踪打开的语句，并关闭连接时返回到池中。 -->
		<property name="jdbcInterceptors"
			value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
	</bean>
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close" parent="poolDataSource">
		<property name="driverClassName" value="${driverClass}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${user}" />
		<property name="password" value="${pazzwd}" />
	</bean>
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven transaction-manager="txManager" />
</beans>